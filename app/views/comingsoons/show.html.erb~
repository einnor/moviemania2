<div class="row">
	<div class="large-12 columns">
		<p><%= link_to "Back", cinema_comingsoons_path(@cinema) %><p>
	</div>
</div>

<div class="row">
	<div class="large-12 columns">
			<%= image_tag @comingsoon.comingsooncover.url(:large), :class => "round center" %> <br />
			<h5><%= @comingsoon.title %></h5>
			<p><%= @comingsoon.category %></p>
			<p><%= @comingsoon.synopsis %></p>
			<p>Release Date : <%= @comingsoon.release_date %></p>
	</div>

</div>

<div class="row">
	<div class="twelve columns">
		<h4 style="text-align:center">Trailer</h4>

		<!--The video player iframe goes here-->
<iframe id="player" class="center" type="text/html" width="640" height="390"
  src="http://www.youtube.com/embed/<%= @comingsoon.youtubestub %>?enablejsapi=1&origin=http://example.com"
  frameborder="0"></iframe>

	<script>
		 //This code loads the IFrame Player API code asynchronously.
      var tag = document.createElement('script');

      tag.src = "https://www.youtube.com/iframe_api";
      var firstScriptTag = document.getElementsByTagName('script')[0];
      firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

      //This function creates an <iframe> (and YouTube player)
      //after the API code downloads.
      var player;
      function onYouTubeIframeAPIReady() {
        player = new YT.Player('player', {
          events: {
            'onReady': onPlayerReady,
            'onStateChange': onPlayerStateChange
          }
        });
      }

      //The API will call this function when the video player is ready.
      function onPlayerReady(event) {
        event.target.playVideo();
      }

      //The API calls this function when the player's state changes.
      //The function indicates that when playing a video (state=1),
      //the player should play for six seconds and then stop.
      var done = false;
      function onPlayerStateChange(event) {
        if (event.data == YT.PlayerState.PLAYING && !done) {
          setTimeout(stopVideo, 6000);
          done = true;
        }
      }
      function stopVideo() {
        player.stopVideo();
      }
	</script>

	</div>
</div>

<div class="row">
	<div class="large-12 columns">
		<p><%= link_to "Back", cinema_comingsoons_path(@cinema) %><p>
	</div>
</div>


<!--Comments and Reviews-->
<div class="commentswrapper round">
	<div class="comments">
		<h4 style="text-align:center">Forum</h4>
		<%= render :partial => @comingsoon.forumcomingsoons %>
		<%= form_for [@cinema, @comingsoon, Forumcomingsoon.new] do |f| %>
		<p>
			<%= f.text_area :body, :label => "New comment/review", as: :text, input_html: {rows:"3"}, :class => "round" %>
		</p>
		<%= f.submit "Post", :class => "small radius button" %>
		<% end %>
	</div>
</div>
